@model IReadyonlineexam.Models.Studentsyllabumodel

@{
    ViewBag.Title = "StuSyllabus";
    Layout = "~/Views/Contributor/Shared/_ContributorLayoutPage.cshtml";
}
@if (TempData["result"] != null)
{
    <script>
        alert("@TempData["result"]");
    </script>
}




<h4>Student Syllabus</h4>
<div id="rootwizard" class="wizard wizard-full-width">

    <form action="#" method="POST" name="wizard_form">

        <div class="wizard-content tab-content">

            <div class="tab-pane active" id="tab1">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()


                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ssid)
                    <div class="row">

                        <div class="col-md-6 offset-md-3">
                            <p class="desc m-b-20"></p>
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })



                            <div class="form-group">
                                <label class="control-label">Select Category Name</label>
                                @Html.DropDownListFor(model => model.Course, ViewBag.state as List<SelectListItem>, new { @class = "form-control", required = "required" })

                            </div>
                            <div class="form-group">
                                <label class="control-label">Select Semester </label>
                                @Html.DropDownListFor(model => model.Semester, new SelectList(string.Empty, "Value", "Text"), "--Select City--", new { @class = "form-control", required = "required" })
                            </div>
                            <div class="form-group">
                                <label class="control-label">Select Subjects </label>
                                @Html.DropDownListFor(model => model.SubjectID, new SelectList(string.Empty, "Value", "Text"), "--Select Subjects--", new { @class = "form-control", required = "required" })
                            </div>

                            <div class="form-group">
                                <label class="control-label">Unit </label>
                                @Html.DropDownListFor(Model => Model.Uid, (IEnumerable<SelectListItem>)ViewBag.selectedunit as SelectList, new { @class = "form-control", required = "required" })

                            </div>
                            <div class="form-group">
                                <label class="control-label">Unit Name<span class="text-danger">*</span></label>
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            </div>
                            <div class="form-group">
                                <label class="control-label">Unit Description<span class="text-danger">*</span></label>
                                @Html.EditorFor(model => model.UnitDescription, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            </div>


                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Create" class="btn btn-primary" />
                                </div>
                            </div>
                            <script src="~/Scripts/jquery-3.3.1.min.js"></script>
                            <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
                            <script type="text/javascript">



    $(document).ready(function () {

        $("#Course").change(function () {
            $("#Semester").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Getcity")',
                dataType: 'json',
                data: { id: $("#Course").val() },
                success: function (city) {

                    $.each(city, function (i, city) {
                        $("#Semester").append('<option value="'+ city.Value + '">' + city.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
            return false;
        })

        $("#Semester").change(function () {
            $("#SubjectID").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetSubject")',
                dataType: 'json',
                data: { id: $("#Semester").val() },
                success: function (subject) {

                    $.each(subject, function (i, subject) {
                        $("#SubjectID").append('<option value="' + subject.Value + '">' + subject.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
            return false;
        })
    });
                            </script>

                        </div>
                    </div>
                }

                <div class="panel-body">
                    <center>
                        <table class="table table-striped m-b-0">
                            <tr>
                                <th>
                                    Course Name
                                </th>
                                <th>
                                    Unit Number
                                </th>

                                <th>
                                    Unit Name
                                </th>
                                <th>
                                    Description
                                </th>

                                <th>
                                    Created Date
                                </th>
                                <th>Edit | Delete</th>
                            </tr>

                            @foreach (var item in ViewBag.syllabus)
                            {
                                <tr>
                                    <td>
                                        @item.SubjectName
                                    </td>
                                    <td>
                                        @item.UnitName
                                    </td>
                                    <td>
                                        @item.ChapterName
                                    </td>

                                    <td>
                                        @item.ChapterDesciption
                                    </td>
                                    <td>

                                        @Convert.ToString(string.Format("{0:dd/MM/yyyy}", item.CreatedDate))

                                    </td>
                                    <td>
                                        @Html.ActionLink("Edit", "EditStuSyllabus", new { id = item.Ssid }) |
                                        @Html.ActionLink("Delete", "DeleteStuSyllabus", new { id = item.Ssid })
                                    </td>
                                </tr>
                            }

                        </table>
                    </center>

                </div>
            </div>
        </div>

    </form>

</div>